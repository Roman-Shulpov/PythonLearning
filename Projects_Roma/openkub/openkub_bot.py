from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
import os
import logging
from io import BytesIO
import shutil  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–æ–≤

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
TOKEN_USER = '7596367706:AAHxXabI0K4tb9TVrRtTV7ELMaN8S_LGqVY'  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
ADMIN_CHAT_ID = '5099059098'  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –≤–∞—à chat_id

# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
if not os.path.exists('screenshots'):
    os.makedirs('screenshots')


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = (
        "‚ú® –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å! ‚ú®\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—à—É –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤ Discord –∏ YouTube, "
        "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n\n"
        "1. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Å—É–º–º—É 250 —Ä—É–±–ª–µ–π –Ω–∞ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:\n"
        "   2200 7013 4916 7947\n\n"
        "2. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –≤–∞—à –ø–ª–∞—Ç–µ–∂. "
        "–ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å –≤–∞—à–µ –§–ò–û!\n\n"
        "üéâ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –ø—Ä–æ–≤–µ—Ä–∏–º –≤–∞—à –ø–µ—Ä–µ–≤–æ–¥, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ. "
        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ! üôè\n"
        "–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! üòä"
    )
    await update.message.reply_text(message)
    logger.info("–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.message.from_user.id)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ID –≤ —Å—Ç—Ä–æ–∫—É
    user_name = update.message.from_user.full_name

    # –ü–æ–ª—É—á–∞–µ–º –§–ò–û –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    fio = update.message.caption if update.message.caption else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    file = await update.message.photo[-1].get_file()
    file_stream = await file.download_as_bytearray()

    # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    screenshot_path = f"screenshots/{user_id}.jpg"  # –ò–∑–º–µ–Ω—è–µ–º –∏–º—è –Ω–∞ –æ—Å–Ω–æ–≤–µ user_id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –Ω–∞ –¥–∏—Å–∫
    with open(screenshot_path, 'wb') as f:
        f.write(file_stream)

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    admin_message = f"–°–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –æ—Ç {user_name} (ID: {user_id})\n–§–ò–û: {fio}"
    keyboard = [
        [
            InlineKeyboardButton("–û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_{user_id}"),
            InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{user_id}")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    try:
        await context.bot.send_photo(chat_id=5099059098, photo=open(screenshot_path, 'rb'), caption=admin_message,
                                     reply_markup=reply_markup)
        logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É: {admin_message}")

        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        os.remove(screenshot_path)
        logger.info(f"–°–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã.")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await update.message.reply_text("–°–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–∏–Ω—è—Ç. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")


async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤ –∫–æ–ª–ª–±—ç–∫–∞
    user_id = query.data.split('_')[1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data

    if query.data.startswith('approve'):
        await handle_approval(user_id, query, context)
    elif query.data.startswith('reject'):
        await handle_rejection(user_id, query, context)


async def handle_approval(user_id: str, query, context):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    archive_path = "general_bypass_By_Kub.rar"  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –≤–µ—Ä–Ω—ã–π
    try:
        with open(archive_path, 'rb') as archive_file:
            await context.bot.send_document(chat_id=user_id, document=archive_file, filename="general_bypass_By_Kub.rar")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        thank_you_message = (
            "–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å,\n\n"
            "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –ø–æ–∫—É–ø–∫—É –ø—Ä–æ–≥—Ä–∞–º–º—ã! üéâ\n\n"
            "–í–∞—à –∞—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∏ –Ω–∞–¥–µ–µ–º—Å—è,"
            " —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–∫–∞–∂–µ—Ç—Å—è –ø–æ–ª–µ–∑–Ω–æ–π –¥–ª—è –≤–∞—Å.\n\n"
            "–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–∞–π–ª–µ –≤–Ω—É—Ç—Ä–∏ –∞—Ä—Ö–∏–≤–∞."
        )
        await context.bot.send_message(chat_id=user_id, text=thank_you_message)

        await query.edit_message_text(text=f"–ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ–¥–æ–±—Ä–µ–Ω–∞. –ê—Ä—Ö–∏–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—Ä—Ö–∏–≤–∞: {e}")
        await query.edit_message_text(text=f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—Ä—Ö–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")


async def handle_rejection(user_id: str, query, context):
    reasons = [
        "1) –ü–µ—Ä–µ–≤–æ–¥ –Ω–µ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω.",
        "2) –ù–µ —É–∫–∞–∑–∞–Ω—ã –§–ò–û.",
        "3) –°–∫—Ä–∏–Ω—à–æ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –ø–æ–¥–ª–∏–Ω–Ω—ã–º."
    ]
    rejection_message = (
            "–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å,\n\n"
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∏—á–∏–Ω–∞–º:\n"
            + "\n".join(reasons) + "\n\n"
                                   "–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –µ—â–µ —Ä–∞–∑!"
    )

    await context.bot.send_message(chat_id=user_id, text=rejection_message)
    await query.edit_message_text(text=f"–ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")


def main_user_bot():
    application = ApplicationBuilder().token(TOKEN_USER).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    application.add_handler(CallbackQueryHandler(button_handler))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫

    application.run_polling()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.")


if __name__ == '__main__':
    main_user_bot()
